Consider a rectangular grid ("board") containing a single character (number, letter, or symbol) in each space.  For example, consider a standard telephone keypad or an arbitrarily defined grid:
1 	2 	3
4 	5 	6
7 	8 	9
* 	0 	#

 
1 	A 	3 	4
B 	5 	6 	C
7 	8 	D 	9

 
Also, consider the movements of a standard chess piece, for instance a knight or a bishop.

    A knight can move in a single 1x2 "L" shape in any direction
    A bishop can move any number of spaces diagonally in any direction

 
Your task is to write a program that counts the valid phone numbers that can be generated with a given board, subject to the following constraints:

    The number must be able to be generated by a standard chess piece moving around the board.  With the telephone keypad, for example, a knight starting on the number 8 could move to 1 or 3.  From 1 it could move to 6 or 8, etc.  A bishop starting on the number 5 could move to 1, 3, 7, or 9.  From 1, it could move to 5 or 9.
    A valid phone number can contain only digits.  Other characters may appear anywhere on the board, but a piece may not land on one.  It can, however, move past one or more invalid spaces to get to a valid digit on the other side, e.g. a bishop moving multiple diagonal spaces.  Digits will appear at most once on a board while other symbols may appear multiple times.
    A phone number can be any number of digits long; e.g. 7 (standard), 10 (with area code), or even longer with international prefixes
    Not all digits are available to be the first number.  For example, a 7-digit number must not begin with 0 or 1.  You must support an arbitrary list of possible starting digits.

 
The input to the program will take the following form (without the comments):

 

knight             // piece (knight or bishop)

7                  // number length

2 3 4 5 6 7 8 9    // space-separated valid starting digits

4                  // board rows

3                  // board columns

1 2 3              // row 0 of space-separated characters

4 5 6              // row 1

7 8 9              // row ...

* 0 #              // row n-1

 

 

    Your program should read these lines of input and output a single number indicating the number of phone numbers satisfying all of the constraints listed above.
    You are expected to support both the knight and the bishop pieces as well as arbitrary board configurations as specified in the input.

 

 
Additional Instructions:

You are encouraged to write the program in C++, C#, or Python.  If you feel more comfortable in Java, you may choose to use it.  You may use any development environment that you like, however your submission must run in HackerRank in order to be tested.

 

Please remember that our evaluation criterion includes both your approach to the solution as well as your answers to the test cases.  Include modest comments in your code inline and feel free to include other documentation or discussion regarding your code as well.  The final two test cases involve larger inputs which may time out in HackerRank's limited allowable running time.  These cases are considered a bonus when we evaluate your solution.

